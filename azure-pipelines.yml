# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-2019

steps:

# - task: AzureCodeSigning@0
#   displayName: Sign with Azure Code Signing
#   inputs:
#     AzureTenantID: '$Env:tenantId'
#     AzureClientID: '$(client-id)'
#     AzureClientSecret: '$(client-secret)'
#     Endpoint: 'https://wus2.codesigning.azure.net/'
#     CodeSigningAccountName: 'my-codesigning-account'
#     CertificateProfileName: 'my-certificate-profile'
#     FilesFolder: '$(Build.SourcesDirectory)/MauiApp1/MauiApp1/bin/Release/net6.0-windows10.0.19041.0/win10-x64/AppPackages/'
#     FilesFolderFilter: 'msix'
#     FilesFolderRecurse: true
#     FilesFolderDepth: 1
#     FileDigest: 'SHA256'

- task: AzurePowerShell@5
  inputs:
    ScriptType: 'InlineScript'
    azureSubscription: ''
    Inline: |
      # Write your PowerShell commands here.
      
      Write-Host "try something else"
      
      "List files before"
      dir $(Build.SourcesDirectory) -Recurse

      Write-Host "launchine openssl"
      $AKVKEY="vault:vdxdevops:martelloTechnologiesCodeSigning"
      $FileAvailableList = Get-ChildItem -Path $(Build.SourcesDirectory)\artifacts
      $FileAvailableList | ForEach-Object {
        Write-Host "$(Build.SourcesDirectory)\artifacts\$_"
        Write-Host "creating hash"
        & '$(Build.SourcesDirectory)\openssl_x64-windows\tools\openssl\openssl.exe' dgst -binary -sha256 -out "$(Build.SourcesDirectory)\artifacts\$_.hash256" "$(Build.SourcesDirectory)\artifacts\$_"
        Write-Host "signing hash"
        & '$(Build.SourcesDirectory)\openssl_x64-windows\tools\openssl\openssl.exe' pkeyutl -engine e_akv -sign -keyform engine -inkey $AKVKEY -in "$(Build.SourcesDirectory)\artifacts\$_.hash256" -out "$(Build.SourcesDirectory)\artifacts\$_.hash256.signed" -pkeyopt rsa_padding_mode:pss -pkeyopt digest:sha256
        Write-Host "trying to p7s"
        $filePath = "$(Build.SourcesDirectory)\artifacts\$_"
        $fileContent = Get-Content -Path $filePath -Raw
        $hashBytes = [System.Security.Cryptography.SHA256]::Create().ComputeHash([System.Text.Encoding]::UTF8.GetBytes($fileContent))
        $signedHash = Invoke-AzKeyVaultCertificateOperation -VaultName $vaultName -CertificateName $certificateName -Name "sign" -Value $hashBytes
        $signaturePath = "$(Build.SourcesDirectory)\artifacts\$_.p7s"
        [System.IO.File]::WriteAllBytes($signaturePath, $signedHash.Result)
      }   
  
      dir $(Build.SourcesDirectory) -Recurse
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true